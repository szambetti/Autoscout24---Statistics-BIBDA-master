[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Emissioni di CO2",
    "expression": "jython:return value.replace(' g CO2/km (comb.)','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Emissioni di CO2 using expression jython:return value.replace(' g CO2/km (comb.)','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Usato Garantito",
    "expression": "jython:return 1 if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Usato Garantito using expression jython:return 1 if value else 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Per neopatentati",
    "expression": "jython:return 1 if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Per neopatentati using expression jython:return 1 if value else 0"
  },
  {
    "op": "core/column-removal",
    "columnName": "Proprietari",
    "description": "Remove column Proprietari"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Tagliandi certificati",
    "expression": "jython:return 1 if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Tagliandi certificati using expression jython:return 1 if value else 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Veicolo per non fumatori",
    "expression": "jython:return 1 if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Veicolo per non fumatori using expression jython:return 1 if value else 0"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "\\n",
    "regex": true,
    "maxColumns": 0,
    "description": "Split column Consumo carburante by separator"
  },
  {
    "op": "core/column-removal",
    "columnName": "Consumo carburante 5",
    "description": "Remove column Consumo carburante 5"
  },
  {
    "op": "core/column-removal",
    "columnName": "Consumo carburante 4",
    "description": "Remove column Consumo carburante 4"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante 3",
    "expression": "value",
    "edits": [
      {
        "from": [
          "5,7 l/100 km (extraurbano)6,8 l/100 km (comb.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5,7 l/100 km (extraurbano)"
      }
    ],
    "description": "Mass edit cells in column Consumo carburante 3"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Consumo carburante 1",
    "newColumnName": "Consumo carburante combinato",
    "description": "Rename column Consumo carburante 1 to Consumo carburante combinato"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Consumo carburante 2",
    "newColumnName": "Consumo carburante urbano",
    "description": "Rename column Consumo carburante 2 to Consumo carburante urbano"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Consumo carburante 3",
    "newColumnName": "Consumo carburante extraurb",
    "description": "Rename column Consumo carburante 3 to Consumo carburante extraurb"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "jython:import re\nreturn re.sub(r'\\(.*\\)','', value) if value else ''",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression jython:import re\nreturn re.sub(r'\\(.*\\)','', value) if value else ''"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "jython:import re\nreturn re.sub(r'\\(.*\\)','', value) if value else ''",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression jython:import re\nreturn re.sub(r'\\(.*\\)','', value) if value else ''"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "jython:import re\nreturn re.sub(r'\\(.*\\)','', value) if value else ''",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression jython:import re\nreturn re.sub(r'\\(.*\\)','', value) if value else ''"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "jython:return value.replace('l/100 km','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression jython:return value.replace('l/100 km','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "jython:return value.replace('kg/100 km','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression jython:return value.replace('kg/100 km','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "jython:return value.replace('l/100 km','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression jython:return value.replace('l/100 km','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "jython:return value.replace('kg/100 km','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression jython:return value.replace('kg/100 km','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "jython:return value.replace('l/100 km','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression jython:return value.replace('l/100 km','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "jython:return value.replace('kg/100 km','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression jython:return value.replace('kg/100 km','')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Alimentazione",
          "expression": "value",
          "columnName": "Alimentazione",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Elettrica",
                "l": "Elettrica"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Alimentazione",
          "expression": "value",
          "columnName": "Alimentazione",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Elettrica",
                "l": "Elettrica"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "jython:return 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression jython:return 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Alimentazione",
          "expression": "value",
          "columnName": "Alimentazione",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Elettrica",
                "l": "Elettrica"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "jython:return 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression jython:return 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Alimentazione",
          "expression": "value",
          "columnName": "Alimentazione",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Elettrica",
                "l": "Elettrica"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "jython:return 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression jython:return 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "jython:import re\n\nreturn re.sub(r'\\(.*\\)','',value) if value else ''",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression jython:import re\n\nreturn re.sub(r'\\(.*\\)','',value) if value else ''"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Alimentazione",
          "expression": "value",
          "columnName": "Alimentazione",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Elettrica",
                "l": "Elettrica"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "jython:return 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression jython:return 0"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "equal_or_lower",
    "newColumnName": "target",
    "description": "Rename column equal_or_lower to target"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "target",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column target using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Cilindri",
          "expression": "isBlank(value)",
          "columnName": "Cilindri",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Cilindri",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cilindri using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Cilindrata",
          "expression": "isBlank(value)",
          "columnName": "Cilindrata",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Cilindrata",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cilindrata using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Porte",
          "expression": "isBlank(value)",
          "columnName": "Porte",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Porte",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Porte using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Posti a sedere",
          "expression": "isBlank(value)",
          "columnName": "Posti a sedere",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Posti a sedere",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Posti a sedere using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Emissioni di CO2",
          "expression": "isBlank(value)",
          "columnName": "Emissioni di CO2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Emissioni di CO2",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Emissioni di CO2 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Marce",
          "expression": "isBlank(value)",
          "columnName": "Marce",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Marce",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Marce using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Peso a vuoto",
          "expression": "isBlank(value)",
          "columnName": "Peso a vuoto",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Peso a vuoto",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Peso a vuoto using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "price",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column price using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "conditional_on_price",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column conditional_on_price using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante combinato",
    "expression": "jython:return value.replace(',','.') if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante combinato using expression jython:return value.replace(',','.') if value else 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante urbano",
    "expression": "jython:return value.replace(',','.') if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante urbano using expression jython:return value.replace(',','.') if value else 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Consumo carburante extraurb",
    "expression": "jython:return value.replace(',','.') if value else 0",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Consumo carburante extraurb using expression jython:return value.replace(',','.') if value else 0"
  }
]